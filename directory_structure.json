{
    "Blog.jsx": "import React from 'react';\n\nimport { Link } from 'react-router-dom'; // Import Link\n\n\n\nexport const Blog = () => {\n  return (\n    <div>Blog</div>\n  );\n}\n\n\nexport const Blogcard = ({ id, title, content }) => {\n  return (\n    <div className=\"blog-card\">\n      <Link to={`/blog/${id}`}> {/* Link to the individual blog post */}\n        <h2>{title}</h2>\n      </Link>\n      <p>{content}</p>\n    </div>\n  );\n};\n\n",
    "BlogDetail.jsx": "// BlogDetail.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport blogData from './data.json'; // Import your JSON data\n\nexport const BlogDetail = () => {\n  \n\n\n  const { blogId } = useParams(); // Get the blogId from the URL\n  const blogPost = blogData.find(blog => blog.id === parseInt(blogId)); // Find the blog post by ID\n\n  if (!blogPost) {\n    return <div>Blog post not found!</div>; // Handle case where blog post doesn't exist\n  }\n\n  return (\n    <div className=\"blog-detail\">\n      <h1>{blogPost.title}</h1>\n      <p>{blogPost.content}</p>\n      {/* Add any additional details or styling you want here */}\n    </div>\n  );\n};\n",
    "Blogs.css": ".blogs-page {\n    min-height: 100vh;\n    background-color: #242424;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.blogs-page-wrapper{\n    width: 75%;\n}",
    "Blogs.jsx": "import React, { useEffect, useState } from 'react';\nimport { Grids } from '../../components/Grids';\nimport WavyText from '../../components/elements/WavyText';\nimport './Blogs.css';\nimport { Blog, Blogcard } from './Blog';\nimport blogData from './data.json'; // Adjust the path if necessary\n\nexport const Blogs = () => {\n\n    const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('https://backend.creo-elements.com/wp-json/wp/v2/posts');\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n    return (\n        <div>\n            <div className='blogs-page'>\n                <Grids className='grid-1' />\n                <div className='blogs-page-wrapper z-2'>\n                    <WavyText fontSize=\"8rem\">Blogs</WavyText>\n                    {posts.map((post) => (\n        <div key={post.id} className=\"blog-post\">\n          <h3 dangerouslySetInnerHTML={{ __html: post.title.rendered }} />\n          <div dangerouslySetInnerHTML={{ __html: post.content.rendered }} />\n        </div>\n      ))}\n                </div>\n            </div>\n        </div>\n    );\n}",
    "data.json": "[\n    {\n        \"id\": 1,\n        \"title\": \"First Blog Post\",\n        \"content\": \"This is the content of the first blog post.\"\n    },\n    {\n        \"id\": 2,\n        \"title\": \"Second Blog Post\",\n        \"content\": \"This is the content of the second blog post.\"\n    }\n]"
}